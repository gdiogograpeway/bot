<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd">
	<http:listener-config name="HTTP_Listener_config" doc:name="HTTP Listener config" doc:id="5df937e1-24af-4fea-ab4c-4dd90f4e75ef" >
		<http:listener-connection host="0.0.0.0" port="8081" />
	</http:listener-config>
	<http:request-config name="HTTP_Request_configuration" doc:name="HTTP Request configuration" doc:id="09065923-93ef-4e56-837a-3b1557b6bf5d">
		<http:request-connection host="docs.mulesoft.com" />
	</http:request-config>
	<file:config name="File_Config" doc:name="File Config" doc:id="c45483d2-429a-49aa-92fc-3c0fb7637ea9" >
		<file:connection workingDir="C:\Users\Gabri\GW\Bot-git\src\main\resources\data-site" />
	</file:config>
	<flow name="botFlow1" doc:id="1fa37632-5e8f-4e34-b500-ad6a16d630c2" >
		<http:listener doc:name="Listener" doc:id="9e38ee0e-c28f-471b-8409-bef2de1dc658" config-ref="HTTP_Listener_config" path="/page" allowedMethods="POST"/>
		<set-variable value="#[attributes.queryParams[0]]" doc:name="Set Variable" doc:id="707d2efe-0b5b-47a1-b28b-48e23fee6c75" variableName="param" />
		<file:list doc:name="List" doc:id="7735a227-e130-4d91-8123-9052656ef9e0" config-ref="File_Config" directoryPath="C:\Users\Gabri\GW\Bot-git\src\main\resources\data-site\"/>
		<choice doc:name="Choice" doc:id="34fdc8ca-e711-4aa3-af94-79df514523d5" >
			<when expression="#[sizeOf(payload) &gt; 0]">
				<file:read doc:name="Read" doc:id="59acaa3b-eb87-4509-be12-217e1e5250bf" config-ref="File_Config" path="C:\Users\Gabri\GW\Bot-git\src\main\resources\data-site\data.json"/>
				<set-variable value="#[payload]" doc:name="dfPayload" doc:id="d6f76d7e-ac69-40de-98ee-4b105ff1aec0" variableName="dfPayload" />
				<ee:transform doc:name="Transform Message" doc:id="47c78286-a9e0-44a0-8e6e-04fa6b891def">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload map(item, index) ->
{
	"mn": item.cc[0].content,
	"ur": item.cc[0].url
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
				<set-variable value="#[payload]" doc:name="payload CC" doc:id="72de4c24-420b-4a84-994b-b7900a68b0aa" variableName="CC" />
				<foreach doc:name="payload[]" doc:id="82c86ab4-5c06-4e98-ba32-2fb9c463a706" collection="#[vars.dfPayload]">
			<logger level="INFO" doc:name="Logger" doc:id="05ccb0fb-1e61-4e52-bfec-b879422eb261" message="#[%dw 2.0&#10;output application/java&#10;---&#10;vars.dfPayload[vars.counter]]" />
			<choice doc:name="Choice" doc:id="6a20fba8-773f-40c9-9c36-899e82823132">
						<when expression="#[%dw 2.0&#10;output application/java&#10;---&#10;vars.dfPayload[vars.counter -1].cc[0].items != null]">
							<ee:transform doc:name="Transform Message" doc:id="1d630e11-2348-494e-b77b-ca727bfbd456" >
								<ee:message >
									<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
(vars.dfPayload[vars.counter -1].cc map ((item, index) -> 
{ 
    content: upper(item.content), 
    url: item.url
})) ++ flatten(payload.cc.items)]]></ee:set-payload>
								</ee:message>
							</ee:transform>
							<choice doc:name="Choice" doc:id="9f88ad6d-84fb-4125-8fe7-dbbb3522e1aa">
								<when expression="#[payload.items != null]">
									<ee:transform doc:name="Transform Message" doc:id="a5142a8e-5913-4217-86a7-e27093fe9b78">
								<ee:message>
									<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
(payload map ((item, index) -> 
{ 
    content: upper(item.content), 
    url: item.url
})) ++ flatten(payload.items)]]></ee:set-payload>
								</ee:message>
							</ee:transform>
									<choice doc:name="Choice" doc:id="6d9fc814-691a-4e7c-8fa8-2a835199ae58">
										<when expression="#[payload.items != null]">
											<ee:transform doc:name="Copy_of_Transform Message" doc:id="b68e04fd-5729-4c56-b7e7-db79f8fe429f">
								<ee:message>
									<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
(payload map ((item, index) -> 
{ 
    content: upper(item.content), 
    url: item.url
})) ++ flatten(payload.items)]]></ee:set-payload>
								</ee:message>
							</ee:transform>
										</when>
									</choice>
								</when>
							</choice>
							<ee:transform doc:name="Copy_of_Copy_of_Transform Message" doc:id="2af51e30-a1df-4d01-9426-72bd56f135ba">
												<ee:message>
													<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload map (item, index) -> 
{ 
    content: upper(item.content), 
    url: item.url
}]]></ee:set-payload>
												</ee:message>
											</ee:transform>
							<set-variable value="#[%dw 2.0&#10;output application/java&#10;---&#10;if(vars.counter == 1)(payload)else(++(vars.itemsUm, payload))]" doc:name="Set Variable" doc:id="291193be-cc5d-4b4f-a1ee-2e4dc961aa7a" variableName="itemsUm"/>
							<logger level="INFO" doc:name="Logger" doc:id="7c3a4bb2-87d6-4372-9226-71609d85201e" message="#[vars.itemsUm]" />
				</when>
			</choice>
		</foreach>
				<set-payload value="#[%dw 2.0&#10;output application/json&#10;---&#10;vars.itemsUm]" doc:name="Set Payload" doc:id="b26cab82-4916-4359-914f-57e8317bcb69" />
				<ee:transform doc:name="Transform Message" doc:id="bf42a590-08c4-429c-9aa7-56cbc03b5ee2" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload filter ($.content contains(upper(vars.param))) map(item, index) ->
{
	"mn": item.content,
	"ur": item.url
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</when>
			<otherwise >
				<http:request method="GET" doc:name="Copy_of_Request" doc:id="892b376e-97a9-481e-9b88-7a982e5c4d6e" config-ref="HTTP_Request_configuration" path="/site-navigation-data.js" />
				<ee:transform doc:name="Transform Message" doc:id="eb98e8d1-0487-4361-ad8c-d674d2f2e1b7">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
import * from dw::core::Strings
output application/json
---
read(substringAfter(payload replace ";" with(""),"="))]]></ee:set-payload>
			</ee:message>
		</ee:transform>
				<ee:transform doc:name="Copy_of_Transform Message" doc:id="25c3558c-31b2-4766-86c0-089dad1b070d">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
import * from dw::core::Strings
output application/json
---
payload map(item, index) ->
{
	"cc":item.versions.sets map(item2, index) ->
	{
		"content":upper(item2.content[0]),
		"url": item2.url[0],
		"items": item2.items[0]
	}
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
				<file:write doc:name="Write" doc:id="c6427364-0a8f-41b4-9915-5f0bd6b3eb2f" config-ref="File_Config" path="C:\Users\Gabri\GW\Bot-git\src\main\resources\data-site\data.json" />
			</otherwise>
		</choice>
	</flow>
</mule>
